import streamlit as st
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score
import numpy as np

# C√†i ƒë·∫∑t c·∫•u h√¨nh
st.set_page_config(page_title="Supermarket Sales Forecast", layout="wide")

# Ti√™u ƒë·ªÅ
st.title("üõí D·ª± b√°o doanh s·ªë si√™u th·ªã & Tr·ª±c quan h√≥a d·ªØ li·ªáu")

# ƒê·ªçc d·ªØ li·ªáu
@st.cache_data
def load_data():
    df = pd.read_csv("supermarket_sales_forecast_sample.csv")
    return df

df = load_data()

# ===========================
# üìå M√¥ t·∫£ d·ªØ li·ªáu ban ƒë·∫ßu
# ===========================
st.header("üìÑ M√¥ t·∫£ d·ªØ li·ªáu")
st.write("**S·ªë d√≤ng:**", df.shape[0])
st.write("**S·ªë c·ªôt:**", df.shape[1])
st.write("**C√°c c·ªôt trong d·ªØ li·ªáu:**", list(df.columns))
st.dataframe(df.head())

# ===========================
# üîß Ti·ªÅn x·ª≠ l√Ω d·ªØ li·ªáu
# ===========================
st.header("üîß Ti·ªÅn x·ª≠ l√Ω d·ªØ li·ªáu")
st.write("**Ki·ªÉm tra gi√° tr·ªã null:**")
st.dataframe(df.isnull().sum())

st.write("**Th√¥ng tin t·ªïng quan v·ªÅ d·ªØ li·ªáu:**")
st.dataframe(df.describe())

# ===========================
# üìä Ph√¢n t√≠ch d·ªØ li·ªáu
# ===========================
st.header("üìä Ph√¢n t√≠ch d·ªØ li·ªáu")

# T·ªïng doanh s·ªë
total_sales = df['sales'].sum()
st.metric("T·ªïng doanh s·ªë", f"{total_sales:,.0f}")

# Doanh s·ªë trung b√¨nh theo tu·∫ßn
avg_weekly_sales = df.groupby('week')['sales'].sum().mean()
st.metric("Doanh s·ªë trung b√¨nh theo tu·∫ßn", f"{avg_weekly_sales:,.0f}")

# ·∫¢nh h∆∞·ªüng khuy·∫øn m√£i
promo_sales = df[df['promotion'] == 1]['sales'].mean()
no_promo_sales = df[df['promotion'] == 0]['sales'].mean()
st.write(f"‚úÖ Doanh s·ªë trung b√¨nh c√≥ khuy·∫øn m√£i: **{promo_sales:,.0f}**, kh√¥ng khuy·∫øn m√£i: **{no_promo_sales:,.0f}**")

# ===========================
# üìä Tr·ª±c quan h√≥a d·ªØ li·ªáu
# ===========================
st.header("üìä Tr·ª±c quan h√≥a d·ªØ li·ªáu")

# 1. Bi·ªÉu ƒë·ªì ph√¢n ph·ªëi doanh s·ªë
st.subheader("1. Ph√¢n ph·ªëi doanh s·ªë")
fig1, ax1 = plt.subplots(figsize=(10, 5))
sns.histplot(df['sales'], bins=30, kde=True, color='skyblue', ax=ax1)
ax1.set_title('Ph√¢n ph·ªëi doanh s·ªë')
ax1.set_xlabel('Doanh s·ªë')
ax1.set_ylabel('T·∫ßn su·∫•t')
st.pyplot(fig1)

# 2. Top 10 s·∫£n ph·∫©m b√°n ch·∫°y
st.subheader("2. Top 10 s·∫£n ph·∫©m b√°n ch·∫°y nh·∫•t")
top_products = df.groupby('product_id')['sales'].sum().sort_values(ascending=False).head(10)
fig2, ax2 = plt.subplots(figsize=(10, 5))
sns.barplot(x=top_products.values, y=top_products.index, palette='viridis', ax=ax2)
ax2.set_title('Top 10 s·∫£n ph·∫©m b√°n ch·∫°y')
ax2.set_xlabel('T·ªïng doanh s·ªë')
ax2.set_ylabel('M√£ s·∫£n ph·∫©m')
st.pyplot(fig2)

# 3. ·∫¢nh h∆∞·ªüng c·ªßa Promotion ƒë·∫øn Sales
st.subheader("3. Doanh s·ªë theo ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i")
fig3, ax3 = plt.subplots(figsize=(10, 5))
sns.boxplot(x='promotion', y='sales', data=df, palette='Set2', ax=ax3)
ax3.set_title('Doanh s·ªë theo khuy·∫øn m√£i')
ax3.set_xlabel('Khuy·∫øn m√£i')
ax3.set_ylabel('Doanh s·ªë')
st.pyplot(fig3)

# 4. ·∫¢nh h∆∞·ªüng c·ªßa Holiday ƒë·∫øn Sales
st.subheader("4. Doanh s·ªë theo ng√†y l·ªÖ")
fig4, ax4 = plt.subplots(figsize=(10, 5))
sns.boxplot(x='holiday', y='sales', data=df, palette='coolwarm', ax=ax4)
ax4.set_title('Doanh s·ªë theo ng√†y l·ªÖ')
ax4.set_xlabel('Ng√†y l·ªÖ')
ax4.set_ylabel('Doanh s·ªë')
st.pyplot(fig4)

# 5. Xu h∆∞·ªõng doanh s·ªë theo tu·∫ßn
st.subheader("5. Xu h∆∞·ªõng doanh s·ªë theo tu·∫ßn")
fig5, ax5 = plt.subplots(figsize=(10, 5))
sns.lineplot(data=df, x='week', y='sales', color='green', ax=ax5)
ax5.set_title('Xu h∆∞·ªõng doanh s·ªë theo tu·∫ßn')
ax5.set_xlabel('Tu·∫ßn')
ax5.set_ylabel('Doanh s·ªë')
ax5.grid(True)
st.pyplot(fig5)

# ===========================
# üìà D·ª± b√°o doanh s·ªë
# ===========================
st.header("üìà D·ª± b√°o doanh s·ªë")

# Chu·∫©n b·ªã d·ªØ li·ªáu
X = df[['week']]
y = df['sales']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

# ƒê√°nh gi√° m√¥ h√¨nh
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

st.write(f"**MSE:** {mse:,.2f}")
st.write(f"**R2 Score:** {r2:.2f}")

# Bi·ªÉu ƒë·ªì d·ª± b√°o
st.subheader("Bi·ªÉu ƒë·ªì d·ª± b√°o doanh s·ªë")
fig6, ax6 = plt.subplots(figsize=(10, 5))
ax6.scatter(X_test, y_test, label='Th·ª±c t·∫ø', color='blue')
ax6.plot(X_test, y_pred, label='D·ª± b√°o', color='red')
ax6.set_title('D·ª± b√°o doanh s·ªë theo tu·∫ßn')
ax6.set_xlabel('Tu·∫ßn')
ax6.set_ylabel('Doanh s·ªë')
ax6.legend()
st.pyplot(fig6)
